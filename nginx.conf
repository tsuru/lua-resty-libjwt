worker_processes 1;

events {
    worker_connections 1024;
}

http {
    server {
        listen 8888;
        server_name localhost;

        location /public {
            default_type application/json;
            return 200 '{"message": "Hello, World!"}';
        }

        location /private {
            content_by_lua_block {
                local libjwt = require("resty.libjwt")
                local cjson = require("cjson.safe")
                local claim, err = libjwt.validate({
                    ["header_token"] = "Authorization",
                    ["jwks_files"] = {"/usr/share/tokens/jwks.json"},
                })
                ngx.header.content_type = "application/json"
                if err and err ~= "" then
                    ngx.status = ngx.HTTP_UNAUTHORIZED
                    local response = {
                        message = err
                    }
                    return ngx.say(cjson.encode(response))
                end
                if claim then
                    local claim_str = cjson.encode(claim) or "Invalid Claim"
                    ngx.log(ngx.ERR, "JWT Claims: " .. claim_str)
                    ngx.status = ngx.HTTP_OK
                    return ngx.say(claim_str)
                end
                ngx.status = ngx.HTTP_UNAUTHORIZED
                local response = {
                    message = "Unauthorized"
                }
                return ngx.say(cjson.encode(response))
            }
        }
    }
}
